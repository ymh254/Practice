{"ast":null,"code":"var _jsxFileName = \"/Users/minos/Documents/git/Practice/React/hello-react/src/pages/calendar/NewCalendar.js\";\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./calendar.scss\";\nexport default class NewCalendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDateClick = arg => {\n      // bind with an arrow function\n      console.log(arg.dateStr);\n      const tdate = arg.dateStr;\n      this.props.setDate(tdate);\n    };\n  }\n\n  render() {\n    Date.prototype.yyyymmdd = function () {\n      var yyyy = this.getFullYear().toString();\n      var mm = (this.getMonth() + 1).toString();\n      var dd = this.getDate().toString();\n      return yyyy + \"-\" + (mm[1] ? mm : '0' + mm[0]) + \"-\" + (dd[1] ? dd : '0' + dd[0]);\n    };\n\n    const [date, setDate] = useState(new Date().yyyymmdd());\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, date), /*#__PURE__*/React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      plugins: [dayGridPlugin, interactionPlugin],\n      events: [{\n        title: \"출석완료\",\n        date: \"2020-11-08\"\n      }],\n      dateClick: this.handleDateClick,\n      backgroundColor: '#378006',\n      setDate: setDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/minos/Documents/git/Practice/React/hello-react/src/pages/calendar/NewCalendar.js"],"names":["React","FullCalendar","dayGridPlugin","interactionPlugin","NewCalendar","Component","handleDateClick","arg","console","log","dateStr","tdate","props","setDate","render","Date","prototype","yyyymmdd","yyyy","getFullYear","toString","mm","getMonth","dd","getDate","date","useState","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAO,iBAAP;AAEA,eAAe,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SA0BrDC,eA1BqD,GA0BlCC,GAAD,IAAS;AAAE;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACA,YAAMC,KAAK,GAAGJ,GAAG,CAACG,OAAlB;AACA,WAAKE,KAAL,CAAWC,OAAX,CAAmBF,KAAnB;AACH,KA9BoD;AAAA;;AACrDG,EAAAA,MAAM,GAAG;AACLC,IAAAA,IAAI,CAACC,SAAL,CAAeC,QAAf,GAA0B,YAAY;AAClC,UAAIC,IAAI,GAAG,KAAKC,WAAL,GAAmBC,QAAnB,EAAX;AACA,UAAIC,EAAE,GAAG,CAAC,KAAKC,QAAL,KAAkB,CAAnB,EAAsBF,QAAtB,EAAT;AACA,UAAIG,EAAE,GAAG,KAAKC,OAAL,GAAeJ,QAAf,EAAT;AAEA,aAAOF,IAAI,GAAG,GAAP,IAAcG,EAAE,CAAC,CAAD,CAAF,GAAQA,EAAR,GAAa,MAAMA,EAAE,CAAC,CAAD,CAAnC,IAA0C,GAA1C,IAAiDE,EAAE,CAAC,CAAD,CAAF,GAAQA,EAAR,GAAa,MAAMA,EAAE,CAAC,CAAD,CAAtE,CAAP;AACH,KAND;;AAOA,UAAM,CAACE,IAAD,EAAOZ,OAAP,IAAkBa,QAAQ,CAAE,IAAIX,IAAJ,EAAD,CAAaE,QAAb,EAAD,CAAhC;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKQ,IAAL,CADJ,eAEI,oBAAC,YAAD;AACI,MAAA,WAAW,EAAC,cADhB;AAEI,MAAA,OAAO,EAAE,CAACvB,aAAD,EAAgBC,iBAAhB,CAFb;AAGI,MAAA,MAAM,EAAE,CAAC;AAAEwB,QAAAA,KAAK,EAAE,MAAT;AAAiBF,QAAAA,IAAI,EAAE;AAAvB,OAAD,CAHZ;AAII,MAAA,SAAS,EAAE,KAAKnB,eAJpB;AAKI,MAAA,eAAe,EAAE,SALrB;AAMI,MAAA,OAAO,EAAEO,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAcH;;AAzBoD","sourcesContent":["import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./calendar.scss\"\n\nexport default class NewCalendar extends React.Component {\n    render() {\n        Date.prototype.yyyymmdd = function () {\n            var yyyy = this.getFullYear().toString();\n            var mm = (this.getMonth() + 1).toString();\n            var dd = this.getDate().toString();\n\n            return yyyy + \"-\" + (mm[1] ? mm : '0' + mm[0]) + \"-\" + (dd[1] ? dd : '0' + dd[0]);\n        }\n        const [date, setDate] = useState((new Date()).yyyymmdd());\n\n        return (\n            <div className=\"calendar_wrap\">\n                <h2>{date}</h2>\n                <FullCalendar\n                    defaultView=\"dayGridMonth\"\n                    plugins={[dayGridPlugin, interactionPlugin]}\n                    events={[{ title: \"출석완료\", date: \"2020-11-08\" }]}\n                    dateClick={this.handleDateClick}\n                    backgroundColor={'#378006'}\n                    setDate={setDate}\n                />\n            </div>\n\n        )\n    }\n    handleDateClick = (arg) => { // bind with an arrow function\n        console.log(arg.dateStr)\n        const tdate = arg.dateStr;\n        this.props.setDate(tdate);\n    }\n}"]},"metadata":{},"sourceType":"module"}