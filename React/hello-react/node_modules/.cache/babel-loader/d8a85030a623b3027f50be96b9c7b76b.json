{"ast":null,"code":"var _jsxFileName = \"/Users/minos/Documents/git/Practice/React/hello-react/src/pages/NewCalendar.js\";\nimport React from 'react';\n\nconst NewCalendar = () => {\n  const [calendarState, setCalendarState] = useCalendarState();\n  const {\n    date\n  } = calendarState;\n  const [days] = useState(['일', '월', '화', '수', '목', '금', '토']);\n  const [dates, setDates] = useState([]); // 달력의 행\n\n  const [userData] = useUserData();\n  const {\n    schedule\n  } = userData; // 유저의 스케쥴\n\n  const [curSchedule, setCurSchedule] = useState([]); // 현재 달력 날짜 안에 포함된 스케쥴\n\n  useEffect(() => {\n    const {\n      firstDate,\n      lastDate\n    } = getFirstAndLastDate();\n    setDates(makeCalendar(firstDate, lastDate));\n  }, [date]);\n\n  const getCurDateSchedule = curDate => {\n    const curDateSchedule = [];\n    curSchedule.forEach(date => {\n      if (date.curDate.getTime() - curDate.getTime() === 0) {\n        curDateSchedule.push(date);\n      }\n    });\n    return curDateSchedule;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"monthly-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"day-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, days.map((a, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    className: \"day-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, a))), dates.map((a, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    className: \"monthly-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, a.map((b, j) => /*#__PURE__*/React.createElement(NewCalendarCell, {\n    key: j,\n    date: b,\n    schedule: getCurDateSchedule(b),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 38\n    }\n  })))));\n};\n\nexport default NewCalendar;","map":{"version":3,"sources":["/Users/minos/Documents/git/Practice/React/hello-react/src/pages/NewCalendar.js"],"names":["React","NewCalendar","calendarState","setCalendarState","useCalendarState","date","days","useState","dates","setDates","userData","useUserData","schedule","curSchedule","setCurSchedule","useEffect","firstDate","lastDate","getFirstAndLastDate","makeCalendar","getCurDateSchedule","curDate","curDateSchedule","forEach","getTime","push","map","a","i","b","j"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCC,gBAAgB,EAA1D;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWH,aAAjB;AAEA,QAAM,CAACI,IAAD,IAASC,QAAQ,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAAD,CAAvB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,CAAC,EAAD,CAAlC,CANsB,CAMkB;;AACxC,QAAM,CAACG,QAAD,IAAaC,WAAW,EAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeF,QAArB,CARsB,CAQS;;AAC/B,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C,CATsB,CAS8B;;AAEpDQ,EAAAA,SAAS,CACL,MAAM;AACF,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA0BC,mBAAmB,EAAnD;AACAT,IAAAA,QAAQ,CAACU,YAAY,CAACH,SAAD,EAAYC,QAAZ,CAAb,CAAR;AACH,GAJI,EAKL,CAACZ,IAAD,CALK,CAAT;;AAQA,QAAMe,kBAAkB,GAAIC,OAAD,IAAa;AACpC,UAAMC,eAAe,GAAG,EAAxB;AACAT,IAAAA,WAAW,CAACU,OAAZ,CAAqBlB,IAAD,IAAU;AAC1B,UAAIA,IAAI,CAACgB,OAAL,CAAaG,OAAb,KAAyBH,OAAO,CAACG,OAAR,EAAzB,KAA+C,CAAnD,EAAsD;AAClDF,QAAAA,eAAe,CAACG,IAAhB,CAAqBpB,IAArB;AACH;AACJ,KAJD;AAMA,WAAOiB,eAAP;AACH,GATD;;AAWA,sBACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,IAAI,CAACoB,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,kBACN;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,CADL,CADH,CADL,CADJ,EASKnB,KAAK,CAACkB,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACP;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAa,IAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,CAAC,CAACD,GAAF,CAAM,CAACG,CAAD,EAAIC,CAAJ,kBAAU,oBAAC,eAAD;AAAiB,IAAA,GAAG,EAAEA,CAAtB;AAAyB,IAAA,IAAI,EAAED,CAA/B;AAAkC,IAAA,QAAQ,EAAET,kBAAkB,CAACS,CAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CADL,CADH,CATL,CADJ;AAiBH,CA/CD;;AAiDA,eAAe5B,WAAf","sourcesContent":["import React from 'react';\n\nconst NewCalendar = () => {\n\n    const [calendarState, setCalendarState] = useCalendarState();\n    const { date } = calendarState;\n\n    const [days] = useState(['일', '월', '화', '수', '목', '금', '토']);\n    const [dates, setDates] = useState([]); // 달력의 행\n    const [userData] = useUserData();\n    const { schedule } = userData; // 유저의 스케쥴\n    const [curSchedule, setCurSchedule] = useState([]); // 현재 달력 날짜 안에 포함된 스케쥴\n\n    useEffect(\n        () => {\n            const { firstDate, lastDate } = getFirstAndLastDate();\n            setDates(makeCalendar(firstDate, lastDate));\n        },\n        [date]\n    );\n\n    const getCurDateSchedule = (curDate) => {\n        const curDateSchedule = [];\n        curSchedule.forEach((date) => {\n            if (date.curDate.getTime() - curDate.getTime() === 0) {\n                curDateSchedule.push(date);\n            }\n        });\n\n        return curDateSchedule;\n    };\n\n    return (\n        <div id=\"monthly-view\">\n            <div className=\"day-row\">\n                {days.map((a, i) => (\n                    <div key={i} className=\"day-cell\">\n                        {a}\n                    </div>\n                ))}\n            </div>\n\n            {dates.map((a, i) => (\n                <div key={i} className=\"monthly-row\">\n                    {a.map((b, j) => <NewCalendarCell key={j} date={b} schedule={getCurDateSchedule(b)} />)}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default NewCalendar;"]},"metadata":{},"sourceType":"module"}