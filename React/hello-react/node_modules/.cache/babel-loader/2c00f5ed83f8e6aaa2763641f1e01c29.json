{"ast":null,"code":"var _jsxFileName = \"/Users/minos/Documents/git/Practice/React/hello-react/src/pages/NewCalendar.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst NewCalendar = () => {\n  const [days] = useState(['일', '월', '화', '수', '목', '금', '토']);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"monthly-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"day-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, days.map((a, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    className: \"day-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, a))), dates.map((a, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    className: \"monthly-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, a.map((b, j) => /*#__PURE__*/React.createElement(MonthlyCell, {\n    key: j,\n    date: b,\n    schedule: getCurDateSchedule(b),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 38\n    }\n  })))));\n};\n\nexport default NewCalendar;","map":{"version":3,"sources":["/Users/minos/Documents/git/Practice/React/hello-react/src/pages/NewCalendar.js"],"names":["React","useState","useEffect","NewCalendar","days","map","a","i","dates","b","j","getCurDateSchedule"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAM,CAACC,IAAD,IAASH,QAAQ,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAAD,CAAvB;AAGA,sBACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,IAAI,CAACC,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,kBACN;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,CADL,CADH,CADL,CADJ,EASKE,KAAK,CAACH,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACP;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAa,IAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,CAAC,CAACD,GAAF,CAAM,CAACI,CAAD,EAAIC,CAAJ,kBAAU,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,CAAlB;AAAqB,IAAA,IAAI,EAAED,CAA3B;AAA8B,IAAA,QAAQ,EAAEE,kBAAkB,CAACF,CAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CADL,CADH,CATL,CADJ;AAiBH,CAtBD;;AAwBA,eAAeN,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst NewCalendar = () => {\n\n    const [days] = useState(['일', '월', '화', '수', '목', '금', '토']);\n\n\n    return (\n        <div id=\"monthly-view\">\n            <div className=\"day-row\">\n                {days.map((a, i) => (\n                    <div key={i} className=\"day-cell\">\n                        {a}\n                    </div>\n                ))}\n            </div>\n\n            {dates.map((a, i) => (\n                <div key={i} className=\"monthly-row\">\n                    {a.map((b, j) => <MonthlyCell key={j} date={b} schedule={getCurDateSchedule(b)} />)}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default NewCalendar;"]},"metadata":{},"sourceType":"module"}