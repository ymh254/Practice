{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nexport const calendarState = {\n  state: {\n    mode: 'monthly',\n    date: new Date()\n  },\n\n  setState(calendarState) {\n    this.state = calendarState;\n    this.setters.forEach(setter => setter(this.state));\n  },\n\n  setters: []\n}; // Bind the setState function to the store object so\n// we don't lose context when calling it elsewhere\n\ncalendarState.setState = calendarState.setState.bind(calendarState); // this is the custom hook we'll call on components.\n\nexport function useCalendarState() {\n  const [state, set] = useState(calendarState.state);\n\n  if (!calendarState.setters.includes(set)) {\n    calendarState.setters.push(set);\n  }\n\n  useEffect(() => () => {\n    calendarState.setters = calendarState.setters.filter(setter => setter !== set);\n  }, []);\n  return [state, calendarState.setState];\n}","map":{"version":3,"sources":["/Users/minos/Documents/git/Practice/React/hello-react/src/pages/calendar/calendarState.js"],"names":["React","useState","useEffect","calendarState","state","mode","date","Date","setState","setters","forEach","setter","bind","useCalendarState","set","includes","push","filter"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAzB,GADkB;;AAEzBC,EAAAA,QAAQ,CAACL,aAAD,EAAgB;AACpB,SAAKC,KAAL,GAAaD,aAAb;AACA,SAAKM,OAAL,CAAaC,OAAb,CAAsBC,MAAD,IAAYA,MAAM,CAAC,KAAKP,KAAN,CAAvC;AACH,GALwB;;AAMzBK,EAAAA,OAAO,EAAE;AANgB,CAAtB,C,CASP;AACA;;AACAN,aAAa,CAACK,QAAd,GAAyBL,aAAa,CAACK,QAAd,CAAuBI,IAAvB,CAA4BT,aAA5B,CAAzB,C,CAEA;;AACA,OAAO,SAASU,gBAAT,GAA4B;AAC/B,QAAM,CAACT,KAAD,EAAQU,GAAR,IAAeb,QAAQ,CAACE,aAAa,CAACC,KAAf,CAA7B;;AACA,MAAI,CAACD,aAAa,CAACM,OAAd,CAAsBM,QAAtB,CAA+BD,GAA/B,CAAL,EAA0C;AACtCX,IAAAA,aAAa,CAACM,OAAd,CAAsBO,IAAtB,CAA2BF,GAA3B;AACH;;AACDZ,EAAAA,SAAS,CACL,MAAM,MAAM;AACRC,IAAAA,aAAa,CAACM,OAAd,GAAwBN,aAAa,CAACM,OAAd,CAAsBQ,MAAtB,CAA8BN,MAAD,IAAYA,MAAM,KAAKG,GAApD,CAAxB;AACH,GAHI,EAIL,EAJK,CAAT;AAOA,SAAO,CAACV,KAAD,EAAQD,aAAa,CAACK,QAAtB,CAAP;AACH","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const calendarState = {\n    state: { mode: 'monthly', date: new Date() },\n    setState(calendarState) {\n        this.state = calendarState;\n        this.setters.forEach((setter) => setter(this.state));\n    },\n    setters: []\n};\n\n// Bind the setState function to the store object so\n// we don't lose context when calling it elsewhere\ncalendarState.setState = calendarState.setState.bind(calendarState);\n\n// this is the custom hook we'll call on components.\nexport function useCalendarState() {\n    const [state, set] = useState(calendarState.state);\n    if (!calendarState.setters.includes(set)) {\n        calendarState.setters.push(set);\n    }\n    useEffect(\n        () => () => {\n            calendarState.setters = calendarState.setters.filter((setter) => setter !== set);\n        },\n        []\n    );\n\n    return [state, calendarState.setState];\n}\n"]},"metadata":{},"sourceType":"module"}