{"ast":null,"code":"var _jsxFileName = \"/Users/minos/Documents/git/Practice/React/hello-react/src/pages/calendar/NewCalendar.js\";\nimport React, { useState } from 'react';\nimport FullCalendar, { asRoughSeconds } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./calendar.scss\";\nexport default class NewCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateClick = arg => {\n      // bind with an arrow function\n      const {\n        isClicked,\n        currentDate\n      } = this.state;\n\n      if (!isClicked) {\n        this.setState({\n          isClicked: true,\n          currentDate: arg.dateStr\n        });\n        console.log(arg.dateStr);\n      }\n\n      if (currentDate === arg.dateStr) {\n        this.setState({\n          isClicked: false,\n          currentDate: \"\"\n        });\n      } else {\n        this.setState({ ...this.state,\n          currentDate: arg.dateStr\n        });\n      } // const tdate = arg.dateStr;\n      // this.props.setDate(tdate);\n\n    };\n\n    Date.prototype.yyyymmdd = function () {\n      var yyyy = this.getFullYear().toString();\n      var mm = (this.getMonth() + 1).toString();\n      var dd = this.getDate().toString();\n      return yyyy + \"-\" + (mm[1] ? mm : '0' + mm[0]) + \"-\" + (dd[1] ? dd : '0' + dd[0]);\n    };\n\n    this.state = {\n      isClicked: true,\n      currentDate: yyyymmdd()\n    };\n  }\n\n  render() {\n    const {\n      isClicked,\n      currentDate\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, isClicked && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 31\n      }\n    }, currentDate), /*#__PURE__*/React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      plugins: [dayGridPlugin, interactionPlugin],\n      events: [{\n        title: \"출석완료\",\n        date: \"2020-11-08\"\n      }],\n      dateClick: this.handleDateClick,\n      backgroundColor: '#378006',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/minos/Documents/git/Practice/React/hello-react/src/pages/calendar/NewCalendar.js"],"names":["React","useState","FullCalendar","asRoughSeconds","dayGridPlugin","interactionPlugin","NewCalendar","Component","constructor","props","handleDateClick","arg","isClicked","currentDate","state","setState","dateStr","console","log","Date","prototype","yyyymmdd","yyyy","getFullYear","toString","mm","getMonth","dd","getDate","render","title","date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,IAAuBC,cAAvB,QAA6C,qBAA7C;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAO,iBAAP;AAEA,eAAe,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AAErDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAiBnBC,eAjBmB,GAiBAC,GAAD,IAAS;AAAE;AACzB,YAAM;AAAEC,QAAAA,SAAF;AAAaC,QAAAA;AAAb,UAA6B,KAAKC,KAAxC;;AAEA,UAAI,CAACF,SAAL,EAAgB;AACZ,aAAKG,QAAL,CAAc;AAAEH,UAAAA,SAAS,EAAE,IAAb;AAAmBC,UAAAA,WAAW,EAAEF,GAAG,CAACK;AAApC,SAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACK,OAAhB;AACH;;AACD,UAAIH,WAAW,KAAKF,GAAG,CAACK,OAAxB,EAAiC;AAC7B,aAAKD,QAAL,CAAc;AAAEH,UAAAA,SAAS,EAAE,KAAb;AAAoBC,UAAAA,WAAW,EAAE;AAAjC,SAAd;AACH,OAFD,MAGK;AACD,aAAKE,QAAL,CAAc,EAAE,GAAG,KAAKD,KAAV;AAAiBD,UAAAA,WAAW,EAAEF,GAAG,CAACK;AAAlC,SAAd;AACH,OAZsB,CAavB;AACA;;AACH,KAhCkB;;AAGfG,IAAAA,IAAI,CAACC,SAAL,CAAeC,QAAf,GAA0B,YAAY;AAClC,UAAIC,IAAI,GAAG,KAAKC,WAAL,GAAmBC,QAAnB,EAAX;AACA,UAAIC,EAAE,GAAG,CAAC,KAAKC,QAAL,KAAkB,CAAnB,EAAsBF,QAAtB,EAAT;AACA,UAAIG,EAAE,GAAG,KAAKC,OAAL,GAAeJ,QAAf,EAAT;AAEA,aAAOF,IAAI,GAAG,GAAP,IAAcG,EAAE,CAAC,CAAD,CAAF,GAAQA,EAAR,GAAa,MAAMA,EAAE,CAAC,CAAD,CAAnC,IAA0C,GAA1C,IAAiDE,EAAE,CAAC,CAAD,CAAF,GAAQA,EAAR,GAAa,MAAMA,EAAE,CAAC,CAAD,CAAtE,CAAP;AACH,KAND;;AAOA,SAAKb,KAAL,GAAa;AACTF,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,WAAW,EAAEQ,QAAQ;AAFZ,KAAb;AAKH;;AAmBDQ,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEjB,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA6B,KAAKC,KAAxC;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMC,WAAN,CADlB,eAEI,oBAAC,YAAD;AACI,MAAA,WAAW,EAAC,cADhB;AAEI,MAAA,OAAO,EAAE,CAACT,aAAD,EAAgBC,iBAAhB,CAFb;AAGI,MAAA,MAAM,EAAE,CAAC;AAAEyB,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,IAAI,EAAE;AAAvB,OAAD,CAHZ;AAII,MAAA,SAAS,EAAE,KAAKrB,eAJpB;AAKI,MAAA,eAAe,EAAE,SALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAYH;;AApDoD","sourcesContent":["import React, { useState } from 'react'\nimport FullCalendar, { asRoughSeconds } from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./calendar.scss\"\n\nexport default class NewCalendar extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        Date.prototype.yyyymmdd = function () {\n            var yyyy = this.getFullYear().toString();\n            var mm = (this.getMonth() + 1).toString();\n            var dd = this.getDate().toString();\n\n            return yyyy + \"-\" + (mm[1] ? mm : '0' + mm[0]) + \"-\" + (dd[1] ? dd : '0' + dd[0]);\n        }\n        this.state = {\n            isClicked: true,\n            currentDate: yyyymmdd()\n        }\n\n    }\n\n    handleDateClick = (arg) => { // bind with an arrow function\n        const { isClicked, currentDate } = this.state;\n\n        if (!isClicked) {\n            this.setState({ isClicked: true, currentDate: arg.dateStr })\n            console.log(arg.dateStr)\n        }\n        if (currentDate === arg.dateStr) {\n            this.setState({ isClicked: false, currentDate: \"\" })\n        }\n        else {\n            this.setState({ ...this.state, currentDate: arg.dateStr })\n        }\n        // const tdate = arg.dateStr;\n        // this.props.setDate(tdate);\n    }\n\n    render() {\n\n        const { isClicked, currentDate } = this.state;\n\n        return (\n            <div className=\"calendar_wrap\">\n                {isClicked && <div>{currentDate}</div>}\n                <FullCalendar\n                    defaultView=\"dayGridMonth\"\n                    plugins={[dayGridPlugin, interactionPlugin]}\n                    events={[{ title: \"출석완료\", date: \"2020-11-08\" }]}\n                    dateClick={this.handleDateClick}\n                    backgroundColor={'#378006'}\n                />\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}